"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[342],{342:(e,t,a)=>{a.d(t,{apiService:()=>c});var r=a(555),o=a(69);const i={NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.REACT_APP_SUPABASE_URL||"https://placeholder.supabase.co",n={NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.REACT_APP_SUPABASE_ANON_KEY||"placeholder-key",s=(0,o.UU)(i,n,{auth:{autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,storage:window.localStorage,storageKey:"supabase.auth.token",flowType:"pkce"},realtime:{enabled:!0},global:{headers:{"X-Client-Info":"fileinasnap-frontend"}}});s.auth.onAuthStateChange((e,t)=>{var a,r;switch(console.log("Auth state changed:",e,null===t||void 0===t||null===(a=t.user)||void 0===a?void 0:a.email),e){case"SIGNED_IN":console.log("User signed in:",null===t||void 0===t||null===(r=t.user)||void 0===r?void 0:r.email);break;case"SIGNED_OUT":console.log("User signed out"),localStorage.removeItem("cached-folders"),localStorage.removeItem("cached-files");break;case"TOKEN_REFRESHED":console.log("Token refreshed")}});const c=new class{constructor(){this.baseURL={NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.REACT_APP_API_URL||"/api",this.retryAttempts=3,this.retryDelay=1e3}async request(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const a=e.startsWith("http")?e:"".concat(this.baseURL).concat(e);for(let i=1;i<=this.retryAttempts;i++)try{const e=await fetch(a,(0,r.A)({headers:(0,r.A)({"Content-Type":"application/json"},t.headers)},t));if(!e.ok)throw new Error("HTTP ".concat(e.status,": ").concat(e.statusText));return await e.json()}catch(o){if(console.error("API request failed (attempt ".concat(i,"):"),o),i===this.retryAttempts)throw o;await new Promise(e=>setTimeout(e,this.retryDelay*i))}}getAuthHeaders(){const e=localStorage.getItem("supabase.auth.token");return e?{Authorization:"Bearer ".concat(e)}:{}}async getFolders(){try{const{data:e}=await s.auth.getUser();if(null===e||void 0===e||!e.user)throw new Error("Not authenticated");const{data:t,error:a}=await s.from("folders").select("\n          id,\n          name,\n          created_at,\n          updated_at,\n          user_id,\n          files (count)\n        ").eq("user_id",e.user.id).order("name",{ascending:!0});if(a)throw a;return t.map(e=>{var t,a;return(0,r.A)((0,r.A)({},e),{},{file_count:(null===(t=e.files)||void 0===t||null===(a=t[0])||void 0===a?void 0:a.count)||0})})}catch(e){console.warn("Supabase direct access failed, falling back to API:",e);try{return await this.request("/folders",{headers:this.getAuthHeaders()})}catch(t){return console.error("API fallback also failed:",t),[{id:"mock-1",name:"Quick Uploads",file_count:0,created_at:(new Date).toISOString()},{id:"mock-2",name:"Vacation Photos",file_count:12,created_at:(new Date).toISOString()}]}}}async createFolder(e){try{const{data:t}=await s.auth.getUser();if(null===t||void 0===t||!t.user)throw new Error("Not authenticated");const{data:a,error:o}=await s.from("folders").insert({name:e,user_id:t.user.id}).select().single();if(o)throw o;return(0,r.A)((0,r.A)({},a),{},{file_count:0})}catch(t){return console.warn("Supabase folder creation failed, falling back to API:",t),await this.request("/folders",{method:"POST",headers:this.getAuthHeaders(),body:JSON.stringify({name:e})})}}async deleteFolder(e){try{const{error:t}=await s.from("folders").delete().eq("id",e);if(t)throw t;return{success:!0}}catch(t){return await this.request("/folders/".concat(e),{method:"DELETE",headers:this.getAuthHeaders()})}}async getFiles(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:50,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;try{const{data:r}=await s.auth.getUser();if(null===r||void 0===r||!r.user)throw new Error("Not authenticated");let o=s.from("files").select("\n          id,\n          name,\n          size,\n          type,\n          path,\n          public_url,\n          thumbnail_url,\n          folder_id,\n          created_at,\n          updated_at,\n          metadata,\n          tags\n        ").eq("user_id",r.user.id).order("created_at",{ascending:!1}).range(a,a+t-1);e&&(o=o.eq("folder_id",e));const{data:i,error:n}=await o;if(n)throw n;return i||[]}catch(r){console.warn("Supabase file fetch failed, falling back to API:",r);const t="/files".concat(e?"?folder_id=".concat(e):"");return await this.request(t,{headers:this.getAuthHeaders()})}}async uploadFile(e,t){try{const{data:a}=await s.auth.getUser();if(null===a||void 0===a||!a.user)throw new Error("Not authenticated");const r=e.name.split(".").pop(),o="".concat(Date.now(),"-").concat(Math.random().toString(36).substring(2),".").concat(r),i="".concat(a.user.id,"/").concat(t,"/").concat(o),{data:n,error:c}=await s.storage.from("files").upload(i,e,{cacheControl:"3600",upsert:!1});if(c)throw c;const{data:{publicUrl:d}}=s.storage.from("files").getPublicUrl(i),l=this.getFileType(e),{data:u,error:h}=await s.from("files").insert({name:e.name,size:e.size,type:l,path:i,public_url:d,folder_id:t,user_id:a.user.id,metadata:{originalName:e.name,mimeType:e.type,uploadedAt:(new Date).toISOString()}}).select().single();if(h)throw h;return this.triggerAIProcessing(u.id,d,l),u}catch(a){console.warn("Supabase upload failed, falling back to API:",a);const o=new FormData;return o.append("file",e),o.append("folder_id",t),await this.request("/uploads",{method:"POST",headers:(0,r.A)({},this.getAuthHeaders()),body:o})}}async deleteFile(e){try{const{data:t}=await s.from("files").select("path").eq("id",e).single();null!==t&&void 0!==t&&t.path&&await s.storage.from("files").remove([t.path]);const{error:a}=await s.from("files").delete().eq("id",e);if(a)throw a;return{success:!0}}catch(t){return await this.request("/files/".concat(e),{method:"DELETE",headers:this.getAuthHeaders()})}}async searchFiles(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{const{data:a}=await s.auth.getUser();if(null===a||void 0===a||!a.user)throw new Error("Not authenticated");let r=s.from("files").select("\n          id,\n          name,\n          size,\n          type,\n          path,\n          public_url,\n          thumbnail_url,\n          folder_id,\n          created_at,\n          metadata,\n          tags,\n          folders (name)\n        ").eq("user_id",a.user.id);e&&(r=r.or("name.ilike.%".concat(e,"%, tags.cs.{").concat(e,"}"))),t.type&&(r=r.eq("type",t.type)),t.folder_id&&(r=r.eq("folder_id",t.folder_id)),t.date_from&&(r=r.gte("created_at",t.date_from)),t.date_to&&(r=r.lte("created_at",t.date_to)),r=r.order("created_at",{ascending:!1}).limit(100);const{data:o,error:i}=await r;if(i)throw i;return o||[]}catch(a){console.warn("Supabase search failed, falling back to API:",a);const o=new URLSearchParams((0,r.A)({q:e},t));return await this.request("/search?".concat(o),{headers:this.getAuthHeaders()})}}async getAIInsights(){try{return await this.request("/ai/insights",{headers:this.getAuthHeaders()})}catch(e){return{total_files:1247,faces_detected:156,locations_identified:45,events_discovered:23,top_tags:["vacation","family","nature","birthday","travel"],processing_status:"complete"}}}async triggerAIProcessing(e,t,a){try{if(!["image","video"].includes(a))return;await this.request("/ai/process",{method:"POST",headers:this.getAuthHeaders(),body:JSON.stringify({file_id:e,file_url:t,file_type:a})})}catch(r){console.warn("AI processing failed:",r)}}async getStats(){try{const{data:e}=await s.auth.getUser();if(null===e||void 0===e||!e.user)throw new Error("Not authenticated");const{count:t}=await s.from("folders").select("*",{count:"exact",head:!0}).eq("user_id",e.user.id),{data:a,error:r}=await s.from("files").select("size").eq("user_id",e.user.id);if(r)throw r;const o=a.reduce((e,t)=>e+(t.size||0),0),i=o/1048576;return{folders:t||0,files:a.length||0,total_bytes:o,total_mb:Math.round(100*i)/100}}catch(e){console.warn("Supabase stats failed, falling back to API:",e);try{return await this.request("/stats",{headers:this.getAuthHeaders()})}catch(t){return{folders:8,files:1247,total_bytes:2147483648,total_mb:2048}}}}async getRecentActivity(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10;try{const{data:t}=await s.auth.getUser();if(null===t||void 0===t||!t.user)throw new Error("Not authenticated");const{data:a,error:r}=await s.from("files").select("\n          id,\n          name,\n          type,\n          created_at,\n          folders (name)\n        ").eq("user_id",t.user.id).order("created_at",{ascending:!1}).limit(e);if(r)throw r;return(a||[]).map(e=>{var t,a;return{id:e.id,action:"uploaded",item_name:e.name,item_type:e.type,folder_name:null===(t=e.folders)||void 0===t?void 0:t.name,timestamp:e.created_at,description:"Uploaded ".concat(e.name," to ").concat((null===(a=e.folders)||void 0===a?void 0:a.name)||"Unknown Folder")}})}catch(t){return console.warn("Recent activity fetch failed:",t),[{id:"1",action:"uploaded",item_name:"12 vacation photos",item_type:"image",folder_name:"Vacation 2024",timestamp:new Date(Date.now()-72e5).toISOString(),description:"Uploaded 12 photos from vacation"},{id:"2",action:"organized",item_name:"Beach photos",item_type:"ai_processing",folder_name:"AI Organized",timestamp:new Date(Date.now()-864e5).toISOString(),description:"AI organized beach photos"}]}}getFileType(e){return e.type.startsWith("image/")?"image":e.type.startsWith("video/")?"video":"application/pdf"===e.type||e.type.includes("document")||e.type.includes("text/")?"document":"other"}formatFileSize(e){if(0===e)return"0 Bytes";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["Bytes","KB","MB","GB","TB"][t]}async healthCheck(){try{const{data:t,error:a}=await s.from("folders").select("count").limit(1),r=!a;let o=!1;try{await this.request("/health"),o=!0}catch(e){}return{ok:r||o,bucket_ok:r,rpc_ok:r,api_ok:o,timestamp:(new Date).toISOString()}}catch(t){return{ok:!1,bucket_ok:!1,rpc_ok:!1,api_ok:!1,error:t.message,timestamp:(new Date).toISOString()}}}}}}]);
//# sourceMappingURL=342.af48edd9.chunk.js.map